spring.application.name=employee-service

#spring.datasource.url= jdbc:mysql://localhost:3306/employee_db
#spring.datasource.username= root
#spring.datasource.password= root
#
#spring.jpa.hibernate.ddl-auto= update
#
#server.port=8081
#
#
##To Register it as eureka client
#
#eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/


#Now we need to add the config server details to load at runtime the department service properties file
spring.config.import=optional:configserver:http://localhost:8888

#RabbitMQ Properties
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


#For Tracing using micrometer
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p[${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.org.springframework.web=DEBUG

spring.zipkin.base-url= http://127.0.0.1:9411/


#Add Circuit Breaker Configuration

#Actuator for circuitbreaker
management.health.circuitbreakers.enabled=true
#Here with this health it makes only health endpoints visible
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.employee-service.registerHealthIndicator=true

#when failure rate goes above threshold then the service comes into open state
resilience4j.circuitbreaker.instances.employee-service.failureRateThreshold=50

resilience4j.circuitbreaker.instances.employee-service.minimumNumberOfCalls=5

resilience4j.circuitbreaker.instances.employee-service.automaticTransitionFromOpenToHalfOpenEnabled=true
#The circuit breaker would be in open state for 5 sec and then move back into half open state
resilience4j.circuitbreaker.instances.employee-service.waitDurationInOpenState=5s

resilience4j.circuitbreaker.instances.employee-service.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.employee-service.slidingWindowSize=10
resilience4j.circuitbreaker.instances.employee-service.slidingWindowType=COUNT_BASED


#####Retry Configuration
resilience4j.retry.instances.employee-service.registerHealthIndicator=true
resilience4j.retry.instances.employee-service.maxRetryAttempts=5
resilience4j.retry.instances.employee-service.waitDuration=1s
